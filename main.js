!function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,n(o.key),o)}}function n(e){var n=function(e,n){if("object"!=t(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!=t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==t(n)?n:String(n)}var r=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.baseUrl=e.baseUrl,this.headers={authorization:e.token,"Content-Type":"application/json"}}var n,r;return n=t,(r=[{key:"getUserInfo",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"getInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("Error:".concat(t.status))}))}},{key:"editUserInfo",value:function(t){return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify(t)}).then((function(t){return t.ok?t.json():Promise.reject("Erro ao editar o perfil: ".concat(t.status))}))}},{key:"addCard",value:function(t){return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify(t)}).then((function(t){return t.ok?t.json():Promise.reject("Erro ao adicionar o card: ".concat(t.status))}))}},{key:"deleteCard",value:function(t){return fetch("".concat(this.baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).then((function(t){console.log("Resposta do servidor ao excluir o card:",t)})).catch((function(t){console.log("Erro ao processar excluir o card:",t)}))}},{key:"likeCard",value:function(t){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(t),{method:"PUT",headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("Error:".concat(t.status))})).then((function(t){return console.log("Resposta do servidor para dar like no card",t),t})).catch((function(t){console.log("Erroa ao processar deslike no card",t)}))}},{key:"unLikeCard",value:function(t){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(t),{method:"DELETE",headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).then((function(t){return console.log("Resposta do servidor para dar dislike no card:",t),t})).catch((function(t){console.error("Erro ao processar dar dislike no card:",t)}))}},{key:"updateAvatar",value:function(t){return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify(t)}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).then((function(t){return console.log("Resposta do servidor ao atualizar o avatar:",t),t})).catch((function(t){console.error("Erro ao mudar a imagem do avatar:",t)}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,a(r.key),r)}}function a(t){var e=function(t,e){if("object"!=o(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==o(e)?e:String(e)}var c=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._overlay=document.querySelector(".overlay"),this._closeButton=this._popup.querySelector(".popup__close")}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("show"),this._overlay.classList.add("show"),this.setEventListeners()}},{key:"close",value:function(){this._popup.classList.remove("show"),this._overlay.classList.remove("show"),this.removeEventListeners()}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._closeButton.addEventListener("click",(function(){t.close()})),this._overlay.addEventListener("click",(function(e){e.target===t._overlay&&t.close()})),document.addEventListener("keydown",(function(e){t._handleEscClose(e)}))}},{key:"removeEventListeners",value:function(){var t=this;this._closeButton.removeEventListener("click",(function(){t.close()})),this._overlay.removeEventListener("click",(function(e){e.target===t._overlay&&t.close()})),document.removeEventListener("keydown",(function(e){t._handleEscClose(e)}))}}])&&i(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function u(t){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},u(t)}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,s(r.key),r)}}function s(t){var e=function(t,e){if("object"!=u(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=u(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==u(e)?e:String(e)}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=y(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},f.apply(this,arguments)}function p(t,e){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},p(t,e)}function d(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function y(t){return y=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},y(t)}var m=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&p(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=y(r);if(o){var n=y(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===u(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return d(t)}(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,t))._confirmButton=e._popup.querySelector("#confirmButton"),e._boundHandleConfirm=e._handleConfirm.bind(d(e)),e._confirmButton.addEventListener("click",e._boundHandleConfirm),e._handleConfirmCallback=null,e}return e=a,(n=[{key:"open",value:function(t){this._handleConfirmCallback=t,f(y(a.prototype),"open",this).call(this)}},{key:"_handleConfirm",value:function(){this._handleConfirmCallback&&(this._handleConfirmCallback(),this._handleConfirmCallback=null),this.close()}}])&&l(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(c);function v(t){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},v(t)}function b(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,h(r.key),r)}}function h(t){var e=function(t,e){if("object"!=v(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=v(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==v(e)?e:String(e)}var _=function(){function t(e,n,r,o,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._id=e._id,this._name=e.name,this._image=e.link,this._likes=e.likes,this._ownerId=e.owner._id,this._templateSelector=n,this._handleCardClick=r,this._api=o,this._userInfo=i,this._isLiked=this._getLikeState()}var e,n;return e=t,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}},{key:"_setEventListeners",value:function(t){var e=this,n=t.querySelector(".card__like-button"),r=t.querySelector(".card__img"),o=t.querySelector(".card__delete-button");n.addEventListener("click",(function(){return e._handleLikeClick()})),r.addEventListener("click",(function(){e._handleCardClick(e._image,e._name)}));var i=new m("#deletePopup");this._ownerId===this._userInfo.getUserInfo().id?(o.style.display="block",this._handleDeleteButtonClick=function(){return e._handleDeleteClick(i)},o.addEventListener("click",this._handleDeleteButtonClick)):o.style.display="none"}},{key:"_handleDeleteClick",value:function(t){var e=this;t.open((function(){e._api.deleteCard(e._id).then((function(){e._element.remove()})).catch((function(t){return console.error("Erro ao excluir o cartão:",t)}))}))}},{key:"_handleLikeClick",value:function(){var t=this;this._isLiked?this._api.unLikeCard(this._id).then((function(e){var n=e.likes;t._updateLikeState(!1,n.length),t._saveLikeState(!1),t._element.querySelector(".card__like-count").textContent=n.length})).catch((function(t){console.error("Erro ao processar dar dislike no cartão:",t)})):this._api.likeCard(this._id).then((function(e){var n=e.likes;t._updateLikeState(!0,n.length),t._saveLikeState(!0),t._element.querySelector(".card__like-count").textContent=n.length})).catch((function(t){console.error("Erro ao processar dar like no cartão:",t)}))}},{key:"_updateLikeState",value:function(t,e){this._isLiked=t,this._likes=e;var n=this._element.querySelector(".card__like-button"),r=this._element.querySelector(".card__like-count");n.classList.toggle("card__like-button_active",t),r.textContent=e.length}},{key:"_saveLikeState",value:function(t){var e=JSON.parse(localStorage.getItem("likesState"))||{};e[this._id]=t,localStorage.setItem("likesState",JSON.stringify(e))}},{key:"_getLikeState",value:function(){return(JSON.parse(localStorage.getItem("likesState"))||{})[this._id]||!1}},{key:"generateCard",value:function(){this._element=this._getTemplate();var t=this._element.querySelector(".card__img");t.src=this._image,t.alt=this._name,this._element.querySelector(".card__img-name").textContent=this._name;var e=this._element.querySelector(".card__like-button");return this._element.querySelector(".card__like-count").textContent=this._likes.length,e.classList.toggle("card__like-button_active",this._isLiked),this._setEventListeners(this._element),this._element}}])&&b(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function g(t){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},g(t)}function k(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,S(r.key),r)}}function S(t){var e=function(t,e){if("object"!=g(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=g(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==g(e)?e:String(e)}var E=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._config=e,this._formElement=n}var e,n;return e=t,(n=[{key:"_showInputError",value:function(t){var e=document.getElementById("".concat(t.id,"Error"));e&&(e.textContent=t.validationMessage,e.classList.add(this._config.errorClass))}},{key:"_hideInputError",value:function(t){var e=document.getElementById("".concat(t.id,"Error"));e&&(e.textContent="",e.classList.remove(this._config.errorClass))}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}},{key:"_toggleButtonState",value:function(t,e){e&&(t.every((function(t){return t.validity.valid}))?(e.removeAttribute("disabled"),e.classList.remove("popup__form-submit-button_disabled")):(e.setAttribute("disabled",!0),e.classList.add("popup__form-submit-button_disabled")))}},{key:"_setEventListeners",value:function(){var t=this,e=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),n=this._formElement.querySelector(this._config.submitButtonSelector);e.forEach((function(r){r.addEventListener("input",(function(){t._checkInputValidity(r),t._toggleButtonState(e,n)}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(t){t.preventDefault()})),this._setEventListeners()}}])&&k(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function w(t){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},w(t)}function L(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,C(r.key),r)}}function C(t){var e=function(t,e){if("object"!=w(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=w(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==w(e)?e:String(e)}var j=function(){function t(e,n){var r=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var e,n;return e=t,n=[{key:"setItems",value:function(t){this._items=t.reverse()}},{key:"render",value:function(t){var e=this;this._items.forEach((function(n){e._renderer(n,t)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}],n&&L(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function P(t){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},P(t)}function O(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,I(r.key),r)}}function I(t){var e=function(t,e){if("object"!=P(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=P(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==P(e)?e:String(e)}function x(){return x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=T(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},x.apply(this,arguments)}function B(t,e){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},B(t,e)}function T(t){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},T(t)}var q=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&B(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=T(r);if(o){var n=T(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===P(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,t)).imageZoom=e._popup.querySelector(".popup__Image-Zoom"),e.title=e._popup.querySelector(".popup__image-text"),e}return e=a,(n=[{key:"open",value:function(t,e,n){x(T(a.prototype),"open",this).call(this),this.imageZoom.src=t,this.imageZoom.alt=e,this.title.textContent=n}}])&&O(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(c);function R(t){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},R(t)}function A(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,U(r.key),r)}}function U(t){var e=function(t,e){if("object"!=R(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=R(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==R(e)?e:String(e)}function D(){return D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=N(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},D.apply(this,arguments)}function V(t,e){return V=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},V(t,e)}function N(t){return N=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},N(t)}var M=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&V(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=N(r);if(o){var n=N(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===R(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t,e,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,t))._submitCallback=e,r._api=n,r._form=r._popup.querySelector(".popup__form"),r._submitButton=r._form.querySelector(".popup__form-submit-button"),r.setEventListeners(),r}return e=a,(n=[{key:"_getInputValues",value:function(){var t={};return this._form.querySelectorAll(".popup__text").forEach((function(e){t[e.id]=e.value})),t}},{key:"submit",value:function(){this._submitCallback(this._getInputValues(),this._api)}},{key:"setEventListeners",value:function(){var t=this;D(N(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t.submit()}))}}])&&A(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(c);function J(t){return J="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},J(t)}function H(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,Z(r.key),r)}}function Z(t){var e=function(t,e){if("object"!=J(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=J(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==J(e)?e:String(e)}var F=function(){function t(e,n,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.nameElement=document.querySelector(e),this.aboutElement=document.querySelector(n),this.avatarElement=document.querySelector(r),this._userId=null}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this.nameElement.textContent,about:this.aboutElement.textContent,avatar:this.avatarElement.src,id:this._userId}}},{key:"setUserInfo",value:function(t,e,n,r){this.nameElement.textContent=t,this.aboutElement.textContent=e,this.avatarElement.src=n,this._userId=r}}])&&H(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),z=document.querySelector(".profile__name"),G=document.querySelector(".profile__about"),K=document.getElementById("pName"),Q=document.getElementById("pAboutme"),W=document.getElementById("pTitle"),X=document.getElementById("pLink"),Y=document.getElementById("pLinkAvatar"),$=document.getElementById("saveButton"),tt=document.getElementById("createButton"),et=document.querySelector(".profile__avatar-container"),nt=document.getElementById("editButton"),rt=document.getElementById("addButton"),ot=document.getElementById("saveAvatarButton"),it=document.getElementById("nameError"),at=document.getElementById("aboutError"),ct=document.getElementById("titleError"),ut=document.getElementById("linkError"),lt=document.getElementById("linkAvatarError"),st=document.querySelector(".profile__avatar-image"),ft=new r({baseUrl:"https://around.nomoreparties.co/v1/web_ptbr_08",token:"7887b144-3999-4d14-a3d6-51691cca960c"}),pt=new F(".profile__name",".profile__about",".profile__avatar-image");ft.getUserInfo().then((function(t){pt.setUserInfo(t.name,t.about,t.avatar,t._id),K.value=z.textContent,Q.value=G.textContent})).catch((function(t){console.error("Erro ao obter informações do usuário:",t)}));var dt=new j({items:[],renderer:yt},".card-list");function yt(t){var e=new _(t,"#cardTemplate",Pt,ft,pt).generateCard();dt.addItem(e)}ft.getInitialCards().then((function(t){dt.setItems(t),dt.render()})).catch((function(t){console.error("Erro ao obter cartões:",t)}));var mt={formSelector:".popup__form",inputSelector:".popup__text",submitButtonSelector:".popup__form-submit-button",inactiveButtonClass:"popup__form-submit-button_disabled",inputErrorClass:"error-message",errorClass:"error-message_active"},vt=document.getElementById("profileForm"),bt=document.getElementById("newLocationForm"),ht=document.getElementById("newAvatarImageForm"),_t=new E(mt,vt),gt=new E(mt,bt),kt=new E(mt,ht);_t.enableValidation(),gt.enableValidation(),kt.enableValidation(),nt.addEventListener("click",(function(){Ot(K,Q,$),St.open()}));var St=new M("#profilePopup",(function(t,e){var n=t.pName,r=t.pAboutme;$.setAttribute("disabled",!0),saveButtonText.textContent="Salvando...",e.editUserInfo({name:n,about:r}).then((function(t){var e=t.avatar;pt.setUserInfo(n,r,e),St.close()})).catch((function(t){console.error("Erro ao salvar:",t)})).finally((function(){saveButtonText.textContent="Salvar",$.removeAttribute("disabled")}))}),ft);function Et(t){var e=K.checkValidity(),n=Q.checkValidity();t===K?(it.textContent=e?"":K.validationMessage,it.classList.toggle("error-message_active",!e),K.classList.toggle("popup__text_invalid",!e)):t===Q&&(at.textContent=n?"":Q.validationMessage,at.classList.toggle("error-message_active",!n),Q.classList.toggle("popup__text_invalid",!n)),Ot(K,Q,$)}$.addEventListener("click",(function(t){t.preventDefault();var e=document.getElementById("saveButtonText");$.setAttribute("disabled",!0),e.textContent="Salvando...",St.submit()})),K.addEventListener("input",(function(){return Et(K)})),Q.addEventListener("input",(function(){return Et(Q)})),rt.addEventListener("click",(function(){Ot(W,X,tt),wt.open()}));var wt=new M("#newLocationPopup",(function(t,e){var n=t.pTitle,r=t.pLink;tt.setAttribute("disabled",!0),tt.textContent="Criando...",e.addCard({name:n,link:r}).then((function(t){yt(t),wt.close()})).catch((function(t){console.log("Erro ao criar o card:",t)})).finally((function(){tt.textContent="Criar",tt.removeAttribute("disabled")}))}),ft);function Lt(t){var e=W.checkValidity(),n=X.checkValidity();t===W?(ct.textContent=e?"":W.validationMessage,ct.classList.toggle("error-message_active",!e),W.classList.toggle("popup__text_invalid",!e)):t===X&&(n?(ut.textContent=X.validationMessage,ut.classList.toggle("error-message_active",!1),X.classList.toggle("popup__text_invalid",!1)):""!==X.value?(ut.textContent="Por favor, insira um endereço web válido.",ut.classList.add("error-message_active"),X.classList.add("popup__text_invalid")):(ut.textContent=n?"":X.validationMessage,ut.classList.toggle("error-message_active",!n),X.classList.toggle("popup__text_invalid",!n))),Ot(W,X,tt)}tt.addEventListener("click",(function(t){t.preventDefault(),wt.submit()})),W.addEventListener("input",(function(){return Lt(W)})),X.addEventListener("input",(function(){return Lt(X)})),et.addEventListener("click",(function(){jt(),Ct.open()}));var Ct=new M("#editAvatarPopup",(function(t,e){var n=t.pLinkAvatar;ot.setAttribute("disabled",!0),avatarButtonText.textContent="Salvando...",e.updateAvatar({avatar:n}).then((function(){var t;t=n,st.src=t,Ct.close()})).catch((function(t){console.log("Erro ao salvar avatar",t)})).finally((function(){avatarButtonText.textContent="Salvar",ot.removeAttribute("disabled")}))}),ft);function jt(){Y.checkValidity()?(ot.classList.remove("popup__form-submit-button_disabled"),ot.removeAttribute("disabled")):(ot.classList.add("popup__form-submit-button_disabled"),ot.setAttribute("disabled",!0))}function Pt(t,e){new q("#popupImage").open(t,e,e)}function Ot(t,e,n){var r=t.checkValidity(),o=e.checkValidity();r&&o?(n.classList.remove("popup__form-submit-button_disabled"),n.removeAttribute("disabled")):(n.classList.add("popup__form-submit-button_disabled"),n.setAttribute("disabled",!0))}ot.addEventListener("click",(function(t){t.preventDefault(),Ct.submit()})),Y.addEventListener("input",(function(){return(e=(t=Y).checkValidity())?(lt.textContent=t.validationMessage,lt.classList.toggle("error-message_active",!1),t.classList.toggle("popup__text_invalid",!1)):""!==t.value?(lt.textContent="Por favor, insira um endereço web válido.",lt.classList.add("error-message_active"),t.classList.add("popup__text_invalid")):(lt.textContent=e?"":t.validationMessage,lt.classList.toggle("error-message_active",!e),t.classList.toggle("popup__text_invalid",!e)),void jt();var t,e}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,